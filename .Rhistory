stepsByDay <- aggregate(df_days$steps ~ df_days$interval + df_days$type_of_day, df_days, mean)
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
stepsByDay$`df_days$interval` <- format(strptime(stepsByDay$`df_days$interval`, format="%H%M"), format = "%H:%M")
stepsByDay$`df_days$interval` <- as.POSIXct(stepsByDay$`df_days$interval`,format="%H:%M")
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`), data = stepsByDay, aspect = 1/2, type = "l", las=2)
View(stepsByDay)
View(stepsByDay)
View(steps_activity)
df_days <- df_filled
df_days <- df_days %>% mutate(type_of_day = factor(ifelse(isWeekday(df_days$date,wday = 1:5), "weekday" ,"weekend")))
stepsByDay <- aggregate(df_days$steps ~ df_days$interval + df_days$type_of_day, df_days, mean)
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
stepsByDay$`df_days$interval` <- format(strptime(stepsByDay$`df_days$interval`, format="%H%M"), format = "%H:%M")
#stepsByDay$`df_days$interval` <- as.POSIXct(stepsByDay$`df_days$interval`,format="%H:%M")
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`), data = stepsByDay, aspect = 1/2, type = "l", las=2)
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`), data = stepsByDay, aspect = 1/2, type = "l", las=2)
View(stepsByDay)
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`), data = stepsByDay, aspect = 1/2, type = "l")
stepsByDay$`df_days$interval` <- as.POSIXct(stepsByDay$`df_days$interval`,format="%H:%M")
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`), data = stepsByDay, aspect = 1/2, type = "l")
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`),
data = stepsByDay, aspect = 1/2, type = "l", xlab = "Hours", ylab = "Number of steps")
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
stepsByDay$`df_days$interval` <- format(strptime(stepsByDay$`df_days$interval`, format="%H%M"), format = "%H:%M")
stepsByDay$`df_days$interval` <- as.POSIXct(stepsByDay$`df_days$interval`,format="%H%M")
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`),
data = stepsByDay, aspect = 1/2, type = "l", xlab = "Hours", ylab = "Number of steps")
:
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
stepsByDay$`df_days$interval` <- format(strptime(stepsByDay$`df_days$interval`, format="%H%M"), format = "%H:%M")
stepsByDay$`df_days$interval` <- as.POSIXct(stepsByDay$`df_days$interval`,format="%H:%M")
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`),
data = stepsByDay, aspect = 1/2, type = "l", xlab = "Hours", ylab = "Number of steps")
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
stepsByDay$`df_days$interval` <- format(strptime(stepsByDay$`df_days$interval`, format="%H%M"), format = "%H:%M")
stepsByDay$`df_days$interval` <- as.POSIXct(stepsByDay$`df_days$interval`,format="%H:%M")
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`),
data = stepsByDay, aspect = 1/2, type = "l", xlab = "Hours", ylab = "Number of steps")
df_days <- df_filled
df_days <- df_days %>% mutate(type_of_day = factor(ifelse(isWeekday(df_days$date,wday = 1:5), "weekday" ,"weekend")))
stepsByDay <- aggregate(df_days$steps ~ df_days$interval + df_days$type_of_day, df_days, mean)
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
stepsByDay$`df_days$interval` <- format(strptime(stepsByDay$`df_days$interval`, format="%H%M"), format = "%H:%M")
stepsByDay$`df_days$interval` <- as.POSIXct(stepsByDay$`df_days$interval`,format="%H:%M")
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`),
data = stepsByDay, aspect = 1/2, type = "l", xlab = "Hours", ylab = "Number of steps")
View(steps_activity)
View(stepsByDay)
df_days <- df_filled
df_days <- df_days %>% mutate(type_of_day = factor(ifelse(isWeekday(df_days$date,wday = 1:5), "weekday" ,"weekend")))
stepsByDay <- aggregate(df_days$steps ~ df_days$interval + df_days$type_of_day, df_days, mean)
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
#stepsByDay$`df_days$interval` <- format(strptime(stepsByDay$`df_days$interval`, format="%H%M"), format = "%H:%M")
stepsByDay$`df_days$interval` <- as.POSIXct(stepsByDay$`df_days$interval`,format="%H:%M")
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`),
data = stepsByDay, aspect = 1/2, type = "l", xlab = "Hours", ylab = "Number of steps")
stepsByDay <- aggregate(df_days$steps ~ df_days$interval + df_days$type_of_day, df_days, mean)
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
stepsByDay$`df_days$interval` <- format(strptime(stepsByDay$`df_days$interval`, format="%H%M"), format = "%H:%M")
stepsByDay$`df_days$interval` <- as.POSIXct(stepsByDay$`df_days$interval`,format="%m-%y")#"%H:%M")
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`),
data = stepsByDay, aspect = 1/2, type = "l", xlab = "Hours", ylab = "Number of steps")
#Question 4. Are there differences in activity patterns between weekdays and weekends?
df_days <- df_filled
df_days <- df_days %>% mutate(type_of_day = factor(ifelse(isWeekday(df_days$date,wday = 1:5), "weekday" ,"weekend")))
stepsByDay <- aggregate(df_days$steps ~ df_days$interval + df_days$type_of_day, df_days, mean)
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
stepsByDay$`df_days$interval` <- format(strptime(stepsByDay$`df_days$interval`, format="%H%M"), format = "%H:%M")
stepsByDay$`df_days$interval` <- as.POSIXct(stepsByDay$`df_days$interval`,format="%m-%y")#"%H:%M")
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`),
data = stepsByDay, aspect = 1/2, type = "l", xlab = "Hours", ylab = "Number of steps")
View(stepsByDay)
df_days <- df_filled
df_days <- df_days %>% mutate(type_of_day = factor(ifelse(isWeekday(df_days$date,wday = 1:5), "weekday" ,"weekend")))
stepsByDay <- aggregate(df_days$steps ~ df_days$interval + df_days$type_of_day, df_days, mean)
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
stepsByDay$`df_days$interval` <- format(strptime(stepsByDay$`df_days$interval`, format="%H%M"), format = "%H:%M")
stepsByDay$`df_days$interval` <- as.POSIXct(stepsByDay$`df_days$interval`,format="%m%y")#"%H:%M")
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`),
data = stepsByDay, aspect = 1/2, type = "l", xlab = "Hours", ylab = "Number of steps")
View(stepsByDay)
df_days <- df_filled
df_days <- df_days %>% mutate(type_of_day = factor(ifelse(isWeekday(df_days$date,wday = 1:5), "weekday" ,"weekend")))
stepsByDay <- aggregate(df_days$steps ~ df_days$interval + df_days$type_of_day, df_days, mean)
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
stepsByDay$`df_days$interval` <- format(strptime(stepsByDay$`df_days$interval`, format="%H%M"), format = "%H:%M")
stepsByDay$`df_days$interval` <- as.POSIXct(stepsByDay$`df_days$interval`,format="%H:%M")
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`),
data = stepsByDay, aspect = 1/2, type = "l", xlab = "Hours", ylab = "Number of steps")
df_days <- df_filled
df_days <- df_days %>% mutate(type_of_day = factor(ifelse(isWeekday(df_days$date,wday = 1:5), "weekday" ,"weekend")))
stepsByDay <- aggregate(df_days$steps ~ df_days$interval + df_days$type_of_day, df_days, mean)
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
stepsByDay$`df_days$interval` <- format(strptime(stepsByDay$`df_days$interval`, format="%H%M"), format = "%H:%M")
stepsByDay$`df_days$interval` <- as.POSIXct(stepsByDay$`df_days$interval`,format="%H:%M:%S")
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`),
data = stepsByDay, aspect = 1/2, type = "l", xlab = "Hours", ylab = "Number of steps")
View(stepsByDay)
df_days <- df_filled
df_days <- df_days %>% mutate(type_of_day = factor(ifelse(isWeekday(df_days$date,wday = 1:5), "weekday" ,"weekend")))
stepsByDay <- aggregate(df_days$steps ~ df_days$interval + df_days$type_of_day, df_days, mean)
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
stepsByDay$`df_days$interval` <- format(strptime(stepsByDay$`df_days$interval`, format="%H%M"), format = "%H:%M")
stepsByDay$`df_days$interval` <- as.POSIXct(stepsByDay$`df_days$interval`,format="%H:%M")
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`),
data = stepsByDay, aspect = 1/2, type = "l", xlab = "Hours", ylab = "Number of steps")
View(stepsByDay)
df_days <- df_filled
df_days <- df_days %>% mutate(type_of_day = factor(ifelse(isWeekday(df_days$date,wday = 1:5), "weekday" ,"weekend")))
stepsByDay <- aggregate(df_days$steps ~ df_days$interval + df_days$type_of_day, df_days, mean)
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
View(stepsByDay)
df_days <- df_filled
df_days <- df_days %>% mutate(type_of_day = factor(ifelse(isWeekday(df_days$date,wday = 1:5), "weekday" ,"weekend")))
stepsByDay <- aggregate(df_days$steps ~ df_days$interval + df_days$type_of_day, df_days, mean)
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
stepsByDay$`df_days$interval` <- format(strptime(stepsByDay$`df_days$interval`, format="%H%M"), format = "%H:%M")
View(stepsByDay)
str(stepsByDay)
stepsByDay$`df_days$interval` <- as.Date(stepsByDay$`df_days$interval`, format = "%H:%M")
View(stepsByDay)
View(stepsByDay)
df_days <- df_filled
df_days <- df_days %>% mutate(type_of_day = factor(ifelse(isWeekday(df_days$date,wday = 1:5), "weekday" ,"weekend")))
stepsByDay <- aggregate(df_days$steps ~ df_days$interval + df_days$type_of_day, df_days, mean)
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
stepsByDay$`df_days$interval` <- format(strptime(stepsByDay$`df_days$interval`, format="%H%M"), format = "%H:%M")
stepsByDay$`df_days$interval` <- as.POSIXct(stepsByDay$`df_days$interval`,format="%H:%M")
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`),
data = stepsByDay, aspect = 1/2, type = "l", xlab = "Hours", ylab = "Number of steps")
df_days <- df_filled
df_days <- df_days %>% mutate(type_of_day = factor(ifelse(isWeekday(df_days$date,wday = 1:5), "weekday" ,"weekend")))
stepsByDay <- aggregate(df_days$steps ~ df_days$interval + df_days$type_of_day, df_days, mean)
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
stepsByDay$`df_days$interval` <- format(strptime(stepsByDay$`df_days$interval`, format="%H%M"), format = "%H:%M")
stepsByDay$`df_days$interval` <- as.POSIXct(stepsByDay$`df_days$interval`,format="%H:%M")
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`),
data = stepsByDay, aspect = 1/2, type = "l", xlab = "Hours", ylab = "Number of steps", ylim = c(0, 230))
df_days <- df_filled
df_days <- df_days %>% mutate(type_of_day = factor(ifelse(isWeekday(df_days$date,wday = 1:5), "weekday" ,"weekend")))
stepsByDay <- aggregate(df_days$steps ~ df_days$interval + df_days$type_of_day, df_days, mean)
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
stepsByDay$`df_days$interval` <- format(strptime(stepsByDay$`df_days$interval`, format="%H%M"), format = "%H:%M")
stepsByDay$`df_days$interval` <- as.POSIXct(stepsByDay$`df_days$interval`,format="%H:%M")
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`),
data = stepsByDay, aspect = 1/2, type = "l", xlab = "Hours", ylab = "Number of steps", xlim = c(0, 230))
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`),
data = stepsByDay, aspect = 1/2, type = "l", xlab = "Hours", ylab = "Number of steps", xlim = c(0, 2400))
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`),
data = stepsByDay, aspect = 1/2, type = "l", xlab = "Hours", ylab = "Number of steps", xlim = c(0, 24))
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`),
data = stepsByDay, aspect = 1/2, type = "l", xlab = "Hours", ylab = "Number of steps", xlim = c(0, 23334))
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`),
data = stepsByDay, aspect = 1/2, type = "l", xlab = "Hours", ylab = "Number of steps", xlim = c(0, 1))
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`),
data = stepsByDay, aspect = 1/2, type = "l", xlab = "Hours", ylab = "Number of steps")
View(stepsByDay)
stepsByDay$`df_days$interval` <- as.Date(stepsByDay$`df_days$interval`, format="%H:%M")
View(stepsByDay)
df_days <- df_filled
df_days <- df_days %>% mutate(type_of_day = factor(ifelse(isWeekday(df_days$date,wday = 1:5), "weekday" ,"weekend")))
stepsByDay <- aggregate(df_days$steps ~ df_days$interval + df_days$type_of_day, df_days, mean)
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
stepsByDay$`df_days$interval` <- format(strptime(stepsByDay$`df_days$interval`, format="%H%M"), format = "%H:%M")
stepsByDay$`df_days$interval` <- as.POSIXct(stepsByDay$`df_days$interval`,format="%H:%M")
df_days <- df_filled
df_days <- df_days %>% mutate(type_of_day = factor(ifelse(isWeekday(df_days$date,wday = 1:5), "weekday" ,"weekend")))
stepsByDay <- aggregate(df_days$steps ~ df_days$interval + df_days$type_of_day, df_days, mean)
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
stepsByDay$`df_days$interval` <- format(strptime(stepsByDay$`df_days$interval`, format="%H%M"), format = "%H:%M")
stepsByDay$`df_days$interval` <- as.POSIXct(stepsByDay$`df_days$interval`,format="%H:%M:%S")
View(total_steps)
df_days <- df_filled
df_days <- df_days %>% mutate(type_of_day = factor(ifelse(isWeekday(df_days$date,wday = 1:5), "weekday" ,"weekend")))
stepsByDay <- aggregate(df_days$steps ~ df_days$interval + df_days$type_of_day, df_days, mean)
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
stepsByDay$`df_days$interval` <- format(strptime(stepsByDay$`df_days$interval`, format="%H%M"), format = "%H:%M")
stepsByDay$`df_days$interval` <- as.POSIXct(stepsByDay$`df_days$interval`,format="%H:%M")
stepsByDay$`df_days$interval` <- as.Date(stepsByDay$`df_days$interval`, format="%H:%M")
View(stepsByDay)
df_days <- df_filled
df_days <- df_days %>% mutate(type_of_day = factor(ifelse(isWeekday(df_days$date,wday = 1:5), "weekday" ,"weekend")))
stepsByDay <- aggregate(df_days$steps ~ df_days$interval + df_days$type_of_day, df_days, mean)
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
stepsByDay$`df_days$interval` <- format(strptime(stepsByDay$`df_days$interval`, format="%H%M"), format = "%H:%M")
stepsByDay$`df_days$interval` <- as.POSIXct(stepsByDay$`df_days$interval`,format="%H:%M")
stepsByDay$`df_days$interval` <- strptime(stepsByDay$`df_days$interval`, format="%H:%M")
View(stepsByDay)
df_days <- df_filled
df_days <- df_days %>% mutate(type_of_day = factor(ifelse(isWeekday(df_days$date,wday = 1:5), "weekday" ,"weekend")))
stepsByDay <- aggregate(df_days$steps ~ df_days$interval + df_days$type_of_day, df_days, mean)
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
stepsByDay$`df_days$interval` <- format(strptime(stepsByDay$`df_days$interval`, format="%H%M"), format = "%H:%M")
stepsByDay$`df_days$interval` <- as.POSIXct(stepsByDay$`df_days$interval`,format="%H:%M")
View(stepsByDay)
df_days <- df_filled
df_days <- df_days %>% mutate(type_of_day = factor(ifelse(isWeekday(df_days$date,wday = 1:5), "weekday" ,"weekend")))
stepsByDay <- aggregate(df_days$steps ~ df_days$interval + df_days$type_of_day, df_days, mean)
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
stepsByDay$`df_days$interval` <- format(strptime(stepsByDay$`df_days$interval`, format="%H%M"), format = "%H:%M")
stepsByDay$`df_days$interval` <- as.POSIXct(stepsByDay$`df_days$interval`,format="%H:%M")
df_days <- df_filled
df_days <- df_days %>% mutate(type_of_day = factor(ifelse(isWeekday(df_days$date,wday = 1:5), "weekday" ,"weekend")))
stepsByDay <- aggregate(df_days$steps ~ df_days$interval + df_days$type_of_day, df_days, mean)
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
stepsByDay$`df_days$interval` <- format(strptime(stepsByDay$`df_days$interval`, format="%H%M"), format = "%H:%M")
stepsByDay$`df_days$interval` <- as.POSIXct(stepsByDay$`df_days$interval`,format="%H:%M")
stepsByDay$`df_days$interval` <- strptime(stepsByDay$`df_days$interval`, format="%H:%M:%S")
View(stepsByDay)
df_days <- df_filled
df_days <- df_days %>% mutate(type_of_day = factor(ifelse(isWeekday(df_days$date,wday = 1:5), "weekday" ,"weekend")))
stepsByDay <- aggregate(df_days$steps ~ df_days$interval + df_days$type_of_day, df_days, mean)
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
stepsByDay$`df_days$interval` <- format(strptime(stepsByDay$`df_days$interval`, format="%H%M"), format = "%H:%M")
#stepsByDay$`df_days$interval` <- as.POSIXct(stepsByDay$`df_days$interval`,format="%H:%M")
stepsByDay$`df_days$interval` <- strptime(stepsByDay$`df_days$interval`, format="%H:%M:%S")
View(stepsByDay)
View(stepsByDay)
df_days <- df_filled
df_days <- df_days %>% mutate(type_of_day = factor(ifelse(isWeekday(df_days$date,wday = 1:5), "weekday" ,"weekend")))
stepsByDay <- aggregate(df_days$steps ~ df_days$interval + df_days$type_of_day, df_days, mean)
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
stepsByDay$`df_days$interval` <- format(strptime(stepsByDay$`df_days$interval`, format="%H%M"), format = "%H:%M")
stepsByDay$`df_days$interval` <- as.POSIXct(stepsByDay$`df_days$interval`,format="%H:%M")
View(stepsByDay)
df_days <- df_filled
df_days <- df_days %>% mutate(type_of_day = factor(ifelse(isWeekday(df_days$date,wday = 1:5), "weekday" ,"weekend")))
stepsByDay <- aggregate(df_days$steps ~ df_days$interval + df_days$type_of_day, df_days, mean)
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
stepsByDay$`df_days$interval` <- format(strptime(stepsByDay$`df_days$interval`, format="%H%M"), format = "%H:%M:%S")
stepsByDay$`df_days$interval` <- as.POSIXct(stepsByDay$`df_days$interval`,format="%H:%M")
View(stepsByDay)
df_days <- df_filled
df_days <- df_days %>% mutate(type_of_day = factor(ifelse(isWeekday(df_days$date,wday = 1:5), "weekday" ,"weekend")))
stepsByDay <- aggregate(df_days$steps ~ df_days$interval + df_days$type_of_day, df_days, mean)
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
stepsByDay$`df_days$interval` <- format(strptime(stepsByDay$`df_days$interval`, format="%H%M%S"), format = "%H:%M:%S")
stepsByDay$`df_days$interval` <- as.POSIXct(stepsByDay$`df_days$interval`,format="%H:%M")
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`),
data = stepsByDay, aspect = 1/2, type = "l", xlab = "Hours", ylab = "Number of steps")
df_days <- df_filled
df_days <- df_days %>% mutate(type_of_day = factor(ifelse(isWeekday(df_days$date,wday = 1:5), "weekday" ,"weekend")))
stepsByDay <- aggregate(df_days$steps ~ df_days$interval + df_days$type_of_day, df_days, mean)
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
stepsByDay$`df_days$interval` <- format(strptime(stepsByDay$`df_days$interval`, format="%H%M%S"), format = "%H:%M:%S")
stepsByDay$`df_days$interval` <- as.POSIXct(stepsByDay$`df_days$interval`,format="%H:%M")
View(stepsByDay)
df_days <- df_filled
df_days <- df_days %>% mutate(type_of_day = factor(ifelse(isWeekday(df_days$date,wday = 1:5), "weekday" ,"weekend")))
stepsByDay <- aggregate(df_days$steps ~ df_days$interval + df_days$type_of_day, df_days, mean)
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
stepsByDay$`df_days$interval` <- format(strptime(stepsByDay$`df_days$interval`, format="%H%M"), format = "%H:%M:%S")
stepsByDay$`df_days$interval` <- as.POSIXct(stepsByDay$`df_days$interval`,format="%H:%M")
View(stepsByDay)
df_days <- df_filled
df_days <- df_days %>% mutate(type_of_day = factor(ifelse(isWeekday(df_days$date,wday = 1:5), "weekday" ,"weekend")))
stepsByDay <- aggregate(df_days$steps ~ df_days$interval + df_days$type_of_day, df_days, mean)
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
stepsByDay$`df_days$interval` <- format(strptime(stepsByDay$`df_days$interval`, format="%H%M"), format = "%H:%M:%S")
stepsByDay$`df_days$interval` <- as.POSIXct(stepsByDay$`df_days$interval`,format="%H:%M:%S")
View(stepsByDay)
str(stepsByDay)
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`),
data = stepsByDay, aspect = 1/2, type = "l", xlab = "Hours", ylab = "Number of steps")
df_days <- df_filled
df_days <- df_days %>% mutate(type_of_day = factor(ifelse(isWeekday(df_days$date,wday = 1:5), "weekday" ,"weekend")))
stepsByDay <- aggregate(df_days$steps ~ df_days$interval + df_days$type_of_day, df_days, mean)
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
stepsByDay$`df_days$interval` <- format(strptime(stepsByDay$`df_days$interval`, format="%H%M"), format = "%H:%M:%S")
stepsByDay$`df_days$interval` <- as.POSIXct(stepsByDay$`df_days$interval`,format="%d %H:%M:%S")
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`),
data = stepsByDay, aspect = 1/2, type = "l", xlab = "Hours", ylab = "Number of steps")
df_days <- df_filled
df_days <- df_days %>% mutate(type_of_day = factor(ifelse(isWeekday(df_days$date,wday = 1:5), "weekday" ,"weekend")))
stepsByDay <- aggregate(df_days$steps ~ df_days$interval + df_days$type_of_day, df_days, mean)
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
stepsByDay$`df_days$interval` <- format(strptime(stepsByDay$`df_days$interval`, format="%H%M"), format = "%d %H:%M:%S")
stepsByDay$`df_days$interval` <- as.POSIXct(stepsByDay$`df_days$interval`,format="%H:%M:%S")
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`),
data = stepsByDay, aspect = 1/2, type = "l", xlab = "Hours", ylab = "Number of steps")
df_days <- df_filled
df_days <- df_days %>% mutate(type_of_day = factor(ifelse(isWeekday(df_days$date,wday = 1:5), "weekday" ,"weekend")))
stepsByDay <- aggregate(df_days$steps ~ df_days$interval + df_days$type_of_day, df_days, mean)
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
stepsByDay$`df_days$interval` <- format(strptime(stepsByDay$`df_days$interval`, format="%H%M"), format = "%H:%M:%S")
stepsByDay$`df_days$interval` <- as.POSIXct(stepsByDay$`df_days$interval`,format="%H:%M:%S")
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`),
data = stepsByDay, aspect = 1/2, type = "l", xlab = "Hours", ylab = "Number of steps")
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`),
data = stepsByDay, aspect = 1/2, type = "l", xlab = "Hours", ylab = "Number of steps", scales=list(y=list(tick.number=10)))
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`),
data = stepsByDay, aspect = 1/2, type = "l", xlab = "Hours", ylab = "Number of steps", scales=list(x=list(tick.number=10)))
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`),
data = stepsByDay, aspect = 1/2, type = "l", xlab = "Hours", ylab = "Number of steps", scales=list(x=list(tick.number=12)))
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`),
data = stepsByDay, aspect = 1/2, type = "l", xlab = "Hours", ylab = "Number of steps", scales=list(x=list(tick.number=6)))
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`),
data = stepsByDay, aspect = 1/2, type = "l", xlab = "Hours", ylab = "Number of steps", scales=list(x=list(tick.number=9)))
df_days <- df_filled
df_days <- df_days %>% mutate(type_of_day = factor(ifelse(isWeekday(df_days$date,wday = 1:5), "weekday" ,"weekend")))
stepsByDay <- aggregate(df_days$steps ~ df_days$interval + df_days$type_of_day, df_days, mean)
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
stepsByDay$`df_days$interval` <- format(strptime(stepsByDay$`df_days$interval`, format="%H%M"), format = "%H:%M")
stepsByDay$`df_days$interval` <- as.POSIXct(stepsByDay$`df_days$interval`,format="%H:%M")
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`),
data = stepsByDay, aspect = 1/2, type = "l", xlab = "Hours", ylab = "Number of steps", scales=list(x=list(tick.number=9)))
View(steps_each_day)
str(df)
df <- read.csv("./data/activity.csv")
#Question 1. What is mean total number of steps taken per day?
steps_each_day <- aggregate(df$steps, by=list(df$date),FUN=sum, na.rm=FALSE)
hist(steps_each_day$x, col = "blue", main = paste("Histogram: Steps per day"), xlab = "Total number of steps per day", ylim = c(0, 30), breaks = 7)
mean(steps_each_day$x,na.rm = TRUE)
median(steps_each_day$x,na.rm = TRUE)
steps_activity <- aggregate(df$steps, by=list(df$interval),FUN=mean, na.rm=TRUE)
steps_activity$Group.1 <- sprintf("%04d", steps_activity$Group.1)
steps_activity$Group.1 <- format(strptime(steps_activity$Group.1, format="%H%M"), format = "%H:%M")
steps_activity$Group.1 <- as.POSIXct(steps_activity$Group.1,format="%H:%M")
plot(x ~ Group.1, data = steps_activity, type = "l", ylim = c(0, 230),las=2, ylab = "Number of steps", xlab = "Hours")
mean(steps_each_day$x,na.rm = TRUE)
median(steps_each_day$x,na.rm = TRUE)
df_filled <- df
sum(is.na(df_filled$steps))
#Devise a strategy for filling in all of the missing values in the dataset. I prefer to use a mean for a 5-minute interval
df_filled <- transform(df_filled, steps = ifelse(is.na(df_filled$steps), steps_activity$x, df_filled$steps))
total_steps <- aggregate(df_filled$steps, by=list(df_filled$date),FUN=sum, na.rm=FALSE)
hist(total_steps$x, col = "red", main = paste("Histogram: Steps per day with filled NA's"), xlab = "Total number of steps per day", ylim = c(0, 40), breaks = 7)
mean(total_steps$x,na.rm = FALSE)
median(total_steps$x,na.rm = FALSE)
df_days <- df_filled
df_days <- df_days %>% mutate(type_of_day = factor(ifelse(isWeekday(df_days$date,wday = 1:5), "weekday" ,"weekend")))
stepsByDay <- aggregate(df_days$steps ~ df_days$interval + df_days$type_of_day, df_days, mean)
stepsByDay$`df_days$interval` <- sprintf("%04d", stepsByDay$`df_days$interval`)
stepsByDay$`df_days$interval` <- format(strptime(stepsByDay$`df_days$interval`, format="%H%M"), format = "%H:%M")
stepsByDay$`df_days$interval` <- as.POSIXct(stepsByDay$`df_days$interval`,format="%H:%M")
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`),
data = stepsByDay, aspect = 1/2, type = "l", xlab = "Hours", ylab = "Number of steps", scales=list(x=list(tick.number=9)))
View(steps_activity)
steps_activity[which.max(steps_activity$x), ]$Group.1
strptime(steps_activity[which.max(steps_activity$x), ]$Group.1,format = format="%H:%M")
strptime((steps_activity[which.max(steps_activity$x), ]$Group.1),format = format="%H:%M")
strptime((steps_activity[which.max(steps_activity$x), ]$Group.1),format = "%H:%M")
strptime((steps_activity[which.max(steps_activity$x), ]$Group.1),format = "%d")
strptime((steps_activity[which.max(steps_activity$x), ]$Group.1),format = "%d")
strptime((steps_activity[which.max(steps_activity$x), ]$Group.1),format = "%H")
strptime((steps_activity[which.max(steps_activity$x), ]$Group.1),format = "%H:%M")
strptime((steps_activity[which.max(steps_activity$x), ]$Group.1),format = "%H:%m")
strptime((steps_activity[which.max(steps_activity$x), ]$Group.1),format = "%H%M")
steps_activity[which.max(steps_activity$x), ]$Group.1
steps_activity[which.max(steps_activity$x), ]$Group.1
str(steps_activity[which.max(steps_activity$x), ]$Group.1)
str(steps_activity[which.max(steps_activity$x), ]$Group.1)[1]
str(steps_activity[which.max(steps_activity$x), ]$Group.1)[2]
str(steps_activity[which.max(steps_activity$x), ]$Group.1)[,2]
str(steps_activity[which.max(steps_activity$x), ]$Group.1)[6]
a <-steps_activity[which.max(steps_activity$x), ]$Group.1
a[1]
a[2]
a[3]
a[,1]
as.Date(a)
as.Date(a, format = "%H")
as.Date(a, format = "%m")
as.Date(a, format = "%H%M")
a
z <- strptime("20/2/06 11:16:16.683", "%d/%m/%y %H:%M:%OS")
z # prints without fractional seconds
op <- options(digits.secs = 3)
z
options(op)
str(a)
unclass(a)
a
as.character(a)
a<- as.character(a)
a[2]
a[,0]
a[6]
str(a)
a <-steps_activity[which.max(steps_activity$x), ]$Group.1
a = format(a, "%H")
a <-steps_activity[which.max(steps_activity$x), ]$Group.1
a = format(a, "%H:%M")
format(steps_activity[which.max(steps_activity$x), ]$Group.1,"%H:%M")
Calculate and report the _mean_ and _median_ total number of steps taken per day.
View(steps_activity)
View(df_filled)
View(total_steps)
View(df_filled)
View(steps_activity)
View(df_filled)
View(df)
View(steps_activity)
View(df_filled)
R.version
source('C:/Users/Magister Yoda/RWorkDir/Reproducible Research/RepData_PeerAssessment1/PA1_template.R')
rm(list=ls())
step_mean
source('C:/Users/Magister Yoda/RWorkDir/Reproducible Research/RepData_PeerAssessment1/PA1_template.R')
hist(steps_each_day$x, col = "blue", main = paste("Histogram: Steps per day"), xlab = "Total number of steps per day", ylim = c(0, 30), breaks = 7)
hist(steps_each_day$x, col = "blue", main = paste("Histogram: Steps per day"), xlab = "Total number of steps per day", ylim = c(0, 30), breaks = 7)
plot(x ~ Group.1, data = steps_activity, type = "l", ylim = c(0, 230),las=2, ylab = "Number of steps", xlab = "Hours")
format(steps_activity[which.max(steps_activity$x), ]$Group.1,"%H:%M")
hist(total_steps$x, col = "red", main = paste("Histogram: Steps per day with filled NA's"),
xlab = "Total number of steps per day", ylim = c(0, 40), breaks = 7)
xyplot(stepsByDay$`df_days$steps` ~ stepsByDay$`df_days$interval` | factor(stepsByDay$`df_days$type_of_day`),
data = stepsByDay, aspect = 1/2, type = "l", xlab = "Hours", ylab = "Number of steps", scales=list(x=list(tick.number=9)))
setwd("C:/Users/Magister Yoda/RWorkDir")
rm(list=ls())
install.packages("swirl")
library(swirl)
install.packages("httr")
install.packages("swirl")
library(swirl)
swirl()
install.packages("httr")
install_from_swirl("R_Programming")
source('C:/Users/Magister Yoda/RWorkDir/Reproducible Research/RepData_PeerAssessment2/data_processing.R')
setwd("C:/Users/Magister Yoda/RWorkDir/Reproducible Research/RepData_PeerAssessment2")
source('C:/Users/Magister Yoda/RWorkDir/Reproducible Research/RepData_PeerAssessment2/data_processing.R')
source('C:/Users/Magister Yoda/RWorkDir/Reproducible Research/RepData_PeerAssessment2/data_processing.R')
grid.arrange(ggp1, ggp2, ncol=1, nrow =2)
agg_fatalities <- aggregate(damage_df$FATALITIES, by=list(damage_df$EVTYPE),FUN=sum, na.rm=FALSE)
agg_fatalities <- agg_fatalities[order(-agg_fatalities$x),][1:10,]
agg_fatalities$Group.1<- factor(agg_fatalities$Group.1,
levels = agg_fatalities$Group.1[-agg_fatalities$x])
agg_injures <- aggregate(damage_df$INJURIES, by=list(damage_df$EVTYPE),FUN=sum, na.rm=FALSE)
agg_injures <- agg_injures[order(-agg_injures$x),][1:10,]
agg_injures$Group.1<- factor(agg_injures$Group.1,
levels = agg_injures$Group.1[-agg_injures$x])
ggp1 <- ggplot(agg_fatalities, aes(x=Group.1, y = x)) + geom_bar(stat = "identity", fill = "red") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggp2 <- ggplot(agg_injures, aes(x=Group.1, y = x)) + geom_bar(stat = "identity", fill = "red") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
grid.arrange(ggp1, ggp2, ncol=1, nrow =2)
# part 2 here we aggregate data and count total money equivalent of damage done by event type and build figures
agg_prop_damage <- aggregate(damage_df$PROPDMGVAL, by=list(damage_df$EVTYPE),FUN=sum, na.rm=FALSE)
agg_prop_damage <- agg_prop_damage[order(-agg_prop_damage$x),][1:10,]
agg_prop_damage$Group.1<- factor(agg_prop_damage$Group.1,
levels = agg_prop_damage$Group.1[-agg_prop_damage$x])
agg_crop_damage <- aggregate(damage_df$CROPDMGVAL, by=list(damage_df$EVTYPE),FUN=sum, na.rm=FALSE)
agg_crop_damage <- agg_crop_damage[order(-agg_crop_damage$x),][1:10,]
agg_crop_damage$Group.1<- factor(agg_crop_damage$Group.1,
levels = agg_crop_damage$Group.1[-agg_crop_damage$x])
ggp3 <- ggplot(agg_prop_damage, aes(x=Group.1, y = x/10^9)) + geom_bar(stat = "identity", fill = "red") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))  + xlab("Event Type") +
ylab("Total amount of damage, billions, usd") + ggtitle("Property damage in each event type")
ggp4 <- ggplot(agg_crop_damage, aes(x=Group.1, y = x/10^9)) + geom_bar(stat = "identity", fill = "red") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))  + xlab("Event Type") +
ylab("Total amount of damage, billions, usd") + ggtitle("Crop damage in each event type")
grid.arrange(ggp3, ggp4, ncol=1, nrow =2)
# part 2 here we aggregate data and count total money equivalent of damage done by event type and build figures
agg_prop_damage <- aggregate(damage_df$PROPDMGVAL, by=list(damage_df$EVTYPE),FUN=sum, na.rm=FALSE)
agg_prop_damage <- agg_prop_damage[order(-agg_prop_damage$x),][1:10,]
agg_prop_damage$Group.1<- factor(agg_prop_damage$Group.1,
levels = agg_prop_damage$Group.1[-agg_prop_damage$x])
agg_crop_damage <- aggregate(damage_df$CROPDMGVAL, by=list(damage_df$EVTYPE),FUN=sum, na.rm=FALSE)
agg_crop_damage <- agg_crop_damage[order(-agg_crop_damage$x),][1:10,]
agg_crop_damage$Group.1<- factor(agg_crop_damage$Group.1,
levels = agg_crop_damage$Group.1[-agg_crop_damage$x])
ggp3 <- ggplot(agg_prop_damage, aes(x=Group.1, y = x/10^9)) + geom_bar(stat = "identity", fill = "red") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))  + xlab("Event Type") +
ylab("Amount of damage, billions, usd") + ggtitle("Total property damage in each event type")
ggp4 <- ggplot(agg_crop_damage, aes(x=Group.1, y = x/10^9)) + geom_bar(stat = "identity", fill = "red") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))  + xlab("Event Type") +
ylab("Amount of damage, billions, usd") + ggtitle("Total crop damage in each event type")
grid.arrange(ggp3, ggp4, ncol=1, nrow =2)
#part 1 here we aggregate data and count injures/fatalities by event type and build figures
agg_fatalities <- aggregate(damage_df$FATALITIES, by=list(damage_df$EVTYPE),FUN=sum, na.rm=FALSE)
agg_fatalities <- agg_fatalities[order(-agg_fatalities$x),][1:10,]
agg_fatalities$Group.1<- factor(agg_fatalities$Group.1,
levels = agg_fatalities$Group.1[-agg_fatalities$x])
agg_injures <- aggregate(damage_df$INJURIES, by=list(damage_df$EVTYPE),FUN=sum, na.rm=FALSE)
agg_injures <- agg_injures[order(-agg_injures$x),][1:10,]
agg_injures$Group.1<- factor(agg_injures$Group.1,
levels = agg_injures$Group.1[-agg_injures$x])
ggp1 <- ggplot(agg_fatalities, aes(x=Group.1, y = x)) + geom_bar(stat = "identity", fill = "purple") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) + xlab("Event Type") +
ylab("Count of events") + ggtitle("Number of fatalities in each event type")
ggp2 <- ggplot(agg_injures, aes(x=Group.1, y = x)) + geom_bar(stat = "identity", fill = "purple") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) + xlab("Event Type") +
ylab("Count of events") + ggtitle("Number of injures in each event type")
grid.arrange(ggp1, ggp2, ncol=1, nrow =2)
length("./data/StormData.csv")
file.info("./data/StormData.csv")
size <- file.info("./data/StormData.csv")
View(size)
file_size <- file.info("./data/StormData.csv")
file.info("./data/StormData.csv")$size
size_of_file <- (file.info("./data/StormData.csv")$size)/2^20
source('C:/Users/Magister Yoda/RWorkDir/Reproducible Research/RepData_PeerAssessment2/data_processing.R')
rm(list=ls())
source('C:/Users/Magister Yoda/RWorkDir/Reproducible Research/RepData_PeerAssessment2/data_processing.R')
setwd("C:/Users/Magister Yoda/RWorkDir/Reproducible Research/RepData_PeerAssessment2")
install.packages("rmarkdown")
install.packages("rmarkdown")
View(agg_fatalities)
View(agg_injures)
View(agg_fatalities)
View(agg_prop_damage)
View(agg_crop_damage)
sessionInfo()
agg_injures[1]
agg_injures[,1]
agg_injures[1,1]
agg_injures[,1]
agg_injures[,2]
agg_injures[1,]
agg_injures[2,]
agg_injures[1:2,]
head(source_df)
Similary i do for the crop damage.
